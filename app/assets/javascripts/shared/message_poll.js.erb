$(function(){
	if (currentPlayerName() != "") {
		var pusher = new Pusher('c4a44690c15cabded2bc'); // Replace with your app key
		var channel = pusher.subscribe(currentPlayerName());
		channel.bind('game-action', function(data) {
		  processMessage(data.message);
		});
	}
});
function currentPlayerName() {
	return $('#current-player-name').text();
}
function gameID()
{
	if ($('#game-id').length > 0) {
		return $('#game-id').text();
	}
	else {
		return nil;
	}
}
function processMessage(data)
{
	var m = eval("(" + data + ")");
	if (m != null)
	{
		calls_since_last_message = 0;

		//self.clearInterval(intID);
		
		var fr_id = m.fr_id;
		var to_id = m.to_id;
		var message = m.message;
		log("recieved message " + message + " from player " + fr_id + " to player " + to_id);
		
		if (message.indexOf("Play Greed with ") == 0)
		{
			var answ = confirm(message) ? "Yes" : "No";
			
			replyTo(fr_id, answ);
		}
		else if (message == "Yes") {
			var game_id = createGameWith(fr_id);
			log("created game " + game_id);
			replyTo(fr_id, "Please join game " + game_id);
			self.location = "/games/" + game_id;
		}
		else if (message == "No") {
			alert("Other player refused.  Sorry.");
			self.location = "/players";
		}
		else if (message.indexOf("Please join game ") == 0)
		{
			var game_id = eval(message.substring(17));
			self.location = "/games/" + game_id;
		}
		else if (message == "Update")
		{
			//self.location.reload(true);
			// instead, do an ajax call to game/show/id which will render using a show.js.erb
	
			$.ajax( { 
						url: '/games/' + gameID(),
						data: { partial: true },
						success:function(result) {
						    $("#game-state").html(result);
						}
			 		}
				  );
		}
		else
		{
			alert(message);
			self.location.reload(true);
		}
	}		
}

function replyTo(id, message)
{
	$.ajax(	{ 	
		url: '/pusher_message',
     	type: 'POST',
		async: false,
     	data: { 
			to: ""+id, message: message, 
		}
	} );		
}
function createGameWith(player)
{
	var game_id = 0;
	$.ajax( {
		url: '/games',
		type: 'POST',
		data: { 
			player2: player
		},
		async: false,
		complete: function(data) {
			log("in createGameWith got response: " + data.responseText);
			var g = eval("(" + data.responseText + ")");
			game_id = g.id;
		}
	});
	return game_id;
}
function log(msg) {
   setTimeout(function() {
        throw new Error(msg);
    }, 0);
}
