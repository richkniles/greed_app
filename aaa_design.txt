Messages

The message model will be used to send messages between users to notify their browser to react.  The messages will be picked up by a javascript message_listener running every second or so.  The messages to be used in Greed will be:

1. ask another player to join in a game
2. answer yes or no to 1.
3. instruct another player's browser to join a game
3. once a game is going, to notify the other player that a move was made

The message queue will be implemented thru the Message model with associated database table messages.  Each row in the message table will have from_player_id, to_player_id and the message code.  The three types of messages will then be;

1. <player_1_id> <player_2_id> "Play greed with <player_1_name>?"
2. <player_1_id> <player_2_id> "yes"
   <player_1_id> <player_2_id> "no"
3. <player_1_id> <player_2_id> "join <game_id>"
4. <player_1_id> <player_2_id> "moved"

The sequence of actions will be:

Players 1 and 2 are signed_in and active (meaning they've done something with their browser in the last 5 seconds)
Player 1 (Rich) clicks on player 2 (Joey) in his Players view.  This creates a message in the messages table:
	<player_1_id> <player_2_id> "Play greed with Rich"
and then renders the waiting view that says "Waiting for Joey to reply"

Meanwhile Joey's browser is checking the message queue by querying with ajax to the messages/index path which will respond with "nil" until there is a message.  The message_poller javascript that does this, will then receive the above message in json, and parse it into the two ids and the message.  It will then react by putting up a confirm dialog with the question "Play greed with Rich" which it parsed out of the json.  Joey will respond with ok or cancel, and the javascript will then do another ajax request to messages/create to put the yes or no answer into the message queue. 

Rich's browser, meanwhile, is running it's message_poller too, and when Joey's message is detected, it either renders the Players view (if Joey said "no") with a Flash[error] = "Joey refused" or it  
creates a new game with Rich and Joey as players, and then sends a final message "join" to Joey. After which it renders the game.

When Joey's browser picks up the join message, it parses the game id out of the message, and redirects to games/id/show

Then it's Rich's move.  He moves by clicking on the move or pass buttons on his view of the game, and with each one, a "moved" message is sent to Joey.  When Joey's browser receives the moved message it refreshes the game/id/show page.  The turn automatically switches to Joey when the game's state switches from 1s_turn to 2s_turn, which happens when Rich pushes the pass button, or he fails to score.


Playing the game

Briefly, Greed players take turns rolling six dice repeatedly until they decide to stop or roll a no-score.  The game will be modeled with a game table, a turn table and a roll table.  A Game has many player1 turns and player2 turns and a turn has many rolls.  A roll has a score based only on the values of the 6 dice, and a turn has a score that's the sum of the scores for all its rolls, unless the last roll scores 0. A game also has a player1 and a player 2 as well as a state, which is one of:
	PLAYER1_TURN
	PLAYER2_TURN
	WAITING
	ABANDONED
The game view displays the current turn, which shows the turn score, and the current roll (6 dice and its score) along with a "Roll" button and a "Pass" button, unless the score of the roll is 0, in which case, there is only an "Oh well" button. When the user clicks the Roll button a new roll is created and the view updates. When the "Oh well" or "Pass" button is pressed, the game state changes to the other player, and the view updates.

When a user's score exceeds 3000, the opposing player gets one more turn, and at the end of that turn, the game is over.  The player with the highest score wins.

Most of the logic for game play will be in the Game class. It will have a roll method, which will produce another roll for the current turn, and a turnover method that changes the state to the other player's turn. In addition it will have a score method that will take 1 or 2 as a parameter, and produce the game score for that player.

The turn will have a roll method as well, which is called by the game's roll method, and it will have a score method.

A roll will have a roll method which is called by the turn's roll method.  It will have 6 dice. And it will have a score method.  

A die will have a roll method, which is simply random(6) + 1.

Here is the wireframe for the game view:


   -----------------------------------------------------------------------------
   |                                                                            |
   |                                                                            |
   |                            Game with Joey                                  |
   |                                                                            |
   |                                                                            |
   |                        -------------------                                 |
   |                        |  Rich  |  Joey   |                                |
   |                        -------------------                                 |
   |                        |  300   |  1,000  |                                |
   |                        -------------------                                 |
   |                                                                            |
   |            Turn score: 200                                                 |
   |                                                                            |
   |                                                                            |
   |            Throw:  3    3    2    4    2   Score: 100                      |
   |                                                                            |
   |                                                                            |
   |                 ----------               ----------                        |
   |                 | Roll   |               |  Pass  |                        |
   |                 ----------               ----------                        |
   -----------------------------------------------------------------------------


or


	-----------------------------------------------------------------------------
	|                                                                            |
	|                                                                            |
	|                            Game with Joey                                  |
	|                                                                            |
	|                                                                            |
	|                        -------------------                                 |
	|                        |  Rich  |  Joey   |                                |
	|                        -------------------                                 |
	|                        |  300   |  1,000  |                                |
	|                        -------------------                                 |
	|                                                                            |
	|            Turn score: 200                                                 |
	|                                                                            |
	|                                                                            |
	|            Throw:  2    2    4    4    6   Score: 0                        |
	|                                                                            |
	|                                                                            |
	|                                ----------                                  |
	|                                | Oh well |                                 |
	|                                ----------                                  |
	-----------------------------------------------------------------------------



